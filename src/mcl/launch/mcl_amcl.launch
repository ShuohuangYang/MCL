<launch>
  <!-- <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/> -->
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="third_tb3"  default="tb3_2"/>

  <arg name="first_tb3_x_pos" default=" 8.0"/>
  <arg name="first_tb3_y_pos" default=" 11.0"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 1.57"/>

  <arg name="second_tb3_x_pos" default=" 7.0"/>
  <arg name="second_tb3_y_pos" default="-1.0"/>
  <arg name="second_tb3_z_pos" default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" 1.57"/>

  <arg name="third_tb3_x_pos" default=" 0.5"/>
  <arg name="third_tb3_y_pos" default=" 3.0"/>
  <arg name="third_tb3_z_pos" default=" 0.0"/>
  <arg name="third_tb3_yaw"   default=" 0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mcl)/worlds/house.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include> 

    <!-- Start Map Server for static test map -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find mcl)/maps/house/house.pgm 0.05"/>

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find mcl)/models/secondary_robot.urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />

   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
     <rosparam file="$(find mcl)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
     <rosparam file="$(find mcl)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
     <rosparam file="$(find mcl)/config/local_costmap_params.yaml" command="load" />
     <rosparam file="$(find mcl)/config/global_costmap_params.yaml" command="load" /> 
     <rosparam file="$(find mcl)/config/base_local_planner_params.yaml" command="load" />
   </node>

  <!-- Start transform from map to odom -->
  <node name="map_to_odom_tf_broadcaster" pkg="mcl" type="map_to_odom_broadcaster" />
  <!-- <node name="map_odom_static_transform" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map odom 100"/> -->

  <!-- AMCL -->
  <node name="amcl" pkg="amcl" type="amcl">
    <!-- note that we'll have to remap the channels later for the multi-robot case --> 
    <param name="use_map_topic" type="bool" value="true"/>
    <param name="odom_frame_id" value="odom"/>
    <!-- <param name="tf_broadcast" type="bool" value="false"/> -->

    <param name="update_min_d" type="double" value="0.05"/>
    <param name="update_min_a" type="double" value="0.0872665"/>

    <param name="initial_pose_x" value="$(arg first_tb3_x_pos)"/>
    <param name="initial_pose_y" value="$(arg first_tb3_y_pos)"/>
    <param name="initial_pose_z" value="$(arg first_tb3_z_pos)"/>
    <param name="initial_pose_a" value="1.57079633"/>
  </node>

  <!-- Start rviz for visualization of pos, map, etc. -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mcl)/config/path_planning_simple.rviz" />


</launch>
